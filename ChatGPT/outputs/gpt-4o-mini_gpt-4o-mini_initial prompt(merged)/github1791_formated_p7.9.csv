text,sentiment
CLA is on file as Square Inc.,0
Thanks a lot!,1
"Can you please provide a table of the browsers you tested, test cases, and the behavior before and after this change?",0
"Instead of . The conceptual model is that the only difference between sync default updates (in React 18) and concurrent default updates (in a future major release) is time slicing. All other behavior should be the same (i.e. the stuff in ). Given this, I think it makes more sense to model the implementation this way, too. This exposed a quirk in the previous implementation where non-sync work was sometimes mistaken for sync work and flushed too early. In the new implementation,  is only used for truly synchronous renders (i.e. ), which should make these mistakes less common. Fixes most of the tests marked with TODOs from #21072.",0
"This is really nice stuff, thanks! I need to make a few minor modification because the Flyway result wouldn't produce JSON and the ordering of auto-configurations needed to be tweaked. See 3995c16ba60bbeb1933c2233ffcab368655fb3c2 for the differences.",1
Thats true for almost every refactoring on this planet ;-).  Exposing implementation details to other classes are a no go even if it looks handy. I've seen more than one product that became unmaintainable after the sum of all technical depts get out of control. Every tiny improvement is a good invest for a healty product.,1
", I changed the implementation to keep the original  strategy and fallback to  if if fails with the error I mentioned in the issue. I included tests for the changes so I am not sure why the code coverage is not catching it.  I also updated the changelog.",0
"Should probably adjust the forward projection so it respects the same extents as the inverse. It might be nice to stream points to each sub-projection and use clipExtent when have support for it, so projecting the whole world and graticule will just work (although of course separate graticules are probably advisable due to differences in scale).",0
String values for representation now accepted.,0
This PR was merged into the repository by commit 4d8cc709e29096171c4f13138b32ef2ec4e0dd4c.,0
Thanks.,1
"Check out , that's the reworked version of this one.",1
"I see. On line 158 it adds it back again, but it's absent for the whole period of loading config files. Has to be a bug.",-1
"thanks,  does it mean my commit will be merged with your changes?",0
"M2 is approaching, any news about this one? Thanks!",0
"Presumably these extensions do something. Disabling them because it makes our API easier to use sounds to me like you are ""fixing"" this problem at the wrong layer.",-1
Just did the process again. It didn't look like it actually was signed (Why would it give that message?),0
"I will try to setup a scenario with wireshark next week to do a capture. El vie., 3 may. 2019 17:28, Pablo Ortiz <",0
Here we go : I committed all changes and sent pull request #14. I messed up again with git in squashing properly commits that's why pull request #12 was closed. I'm pretty happy with the results : it looks well designed and well integrated in Spring Security. I followed at best what we agreed upon and what I proposed. I did realize my first proposal has a bug as the isRememberMe() method was acting like the isAuthenticated() method. I added several unit tests and two integration tests you can call with : gradlew spring-security-samples-cassample:integrationTest. I'm looking forward to your feedback.,1
Assuming this was opened by error.,0
"Greetings, . I find current issue very useful and groundlessly freezed almost merged. After a glance view I have a few comments (I'm nobody at this community, so just ignore, if you find them useless): - Screenshot contains tiny lines on upper and right borders. - ""A look at the Header"" section fully copies code from previous one, but really uses only 5 lines of it. - In ""API Key in Cookies"" and ""API Key in Query"" where did  come from? As I see, you have copied it from test file, but I don't get why it is named the same there either. - Throughout,  class takes API key and uses it as a username. I think, it's not the variable name you want to use for a secret. - The last lines talk about  being , but such parameter does not even exist here. Move to the previous  description in A ""look at the Header"". -  makes no sense. May be make external function `can_make_reques_with_key(key) -",-1
So if we do order added then we'd have to do something else when we find the adapter  that would be akin to what 's last pull request did. So the benefit of ordering would make no difference. This just ensures that any adapters you have with freakishly long prefixes are matched first and returned.,0
"Use button instead of non-interactive element (div). (Removes a Svelte a11y warning.) Before submitting the PR, please make sure you do the following  [x] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC:  [x] Prefix your PR title with , , , or . [x] This message body should clearly illustrate what problems it solves. [ ] Ideally, include a test that fails without this PR but passes with it.  Tests  [ ] Run the tests with  and lint the project with",0
"That's what i thought.  In this case, i would say that we should not take this change.  'normal' Enums are mutable values as far as the language is concerned.  If you want enums that cannot change value, then the new 'const enum' feature is likely what you want. Thanks!",0
"Sorry for the late reply.. Thanks, Elan On Wed, Feb 3, 2016 at 3:41 AM, P M VADIVEL  wrote:",0
Just removed the arrow function.,0
"Thanks, ! Would you please squash your commits and format it to look something like: For extra context, please see the contribution guidelines for squashing and formatting commits.",0
"I REALLY like where this is going. In general, it feels that if someone uses JUnit, lazy verify should be the default, no? I鈥檓 not happy about extra public on Mockito class and the VerificationStrategy. Both APIs seem to be 鈥榠nternal鈥? not really for regular users. Also, I feel uneasy about adding mutable state MockitoCore object. If we need such state, MockingProgress is the way to go (thread safe to the level sufficient/required in Mockito). I鈥檓 wondering if we should start implementing some kind of listeners to the Mockito frameworks so that it is possible to implement such features easily. (brainstorming) Mockito.framework().addListener(x); VerificationListener {   verificationStarted } I need this kind of API/listeners, too. However, I鈥檓 not sure how well it fits your use case. I鈥檓 working on adding automated validation of unused stubs to the JUnit runner and the Mockito JUnit rule. In order to fail the test when it has unusued stubs, I need to a) set a listener that gets notified when stubbing is done / stubbing is used b) run test c) ensure that all stubs were used out. Thoughts? If that works better, we can brainstorm & discuss before you cut code. I don鈥檛 want to discourage you by my endless grumbling about how things should be implemented 馃槂 THANKS for pushing for this feature. I think it鈥檚 cool.",1
"hey, haven't tried this before, but we could try this? basically, you write this in setup.py: that way, we do issue warnings when stuff's old and we don't require some random package version upon install. i didn't previously know you could do a requirements.txt` (for pip) file (i don't have an elegant way to issue warnings based on that file though... it seems like a messy way to do it, unfortunately)",0
"Thanks for the analysis, that's very helpful! Because of the   argument in the link you gave. I totally forgot I had fix that in the  line. We introduced a different opinion for transactions (which is unfortunate considering the default for AOP and we've fixed that in 2.x). Your PR is spot on (in , thank you very much for the feedback).",1
"Great, thanks  ! I looked into your changes to learn the style... what do you mean by  Just curious :)",0
"The only place where I've left non-updated xfail tests is in , which I'm not quite sure what we're going to do with yet, but clearly it's going to get an overhaul. I was able to fix at least a handful of tests along the way here. There was one place where I changed an error message to make things a little more clear, in a way that I felt was good enough to change a test from xfailing to passing. (I'll point this out below.) Selected Reviewer:",1
Thanks again,1
Thanks for the PR. We discussed this again today and have decided that we'd prefer to tackle this by enhancing the existing code that looks at settings.xml to also honour the repositories that are configured there. Would you like to take a look at that in another PR?,0
"had only the most cursory of looks so far, and liked very much that for most of the code there is, as I would have hoped, absolutely no difference between what is done for  and for . This is duck-typing at its best!   The exceptions are the degree to radian conversions; my sense would be to not allow this. Effectively, this is equivalent to allowing some special units to be attached to , which is just what  is for. So, while I'm quite happy for plain numbers in an  to be considered to have dimension of radian (as this is equivalent to dimensionless, which is what a plain number should be), I don't like the idea of allowing plain numbers to really be degrees.",1
"ok, silly me, it was just a question of adding the new subpackages to the  list in . All green now!",1
"I saw that gwtproject/gwt#9206 seems to be resolved. Could someone restart following builds, please?    I'd like to avoid pushing commits just to trigger rebuild.",0
"<!-- First of all, thank you for your contribution! 馃槃 For requesting to pull a new feature or bugfix, please send it from a feature/bugfix branch based on the  branch. Before submitting your pull request, please make sure the checklist below is confirmed. Your pull requests will be merged after one of the collaborators approve. Thank you! -- [涓枃鐗堟ā鏉?/ Chinese template] 馃 This is a ...  [ ] New feature [ ] Bug fix [ ] Site / documentation update [ ] Demo update [x] Component style update [ ] TypeScript definition update [ ] Bundle size optimization [ ] Performance optimization [ ] Enhancement feature [ ] Internationalization [ ] Refactoring [ ] Code style optimization [ ] Test Case [ ] Branch merge [ ] Workflow [ ] Other (about what?)  馃敆 Related issue link fix: spin鐨刬con浼氭瘮瑙嗚涓婄殑楂樺害澶?px #42150 <!-- 1. Put the related issue or discussion links here. 2. close #xxxx or fix #xxxx for instance. -- 馃挕 Background and solution <!-- 1. Describe the problem and the scenario. 2. GIF or snapshot should be provided if includes UI/interactive modification. 3. How to fix the problem, and list the final API implementation and usage sample if that is a new feature. -- 馃摑 Changelog <!-- Describe changes from the user side, and list all potential break changes or other risks.  | Language   | Changelog | | ---------- | --------- | | 馃嚭馃嚫 English | fix(style): keep Spin's container height the same as the son element | | 馃嚚馃嚦 Chinese | fix(style): 淇濇寔spin瀹瑰櫒涓庡瓙鍏冪礌icon楂樺害涓€鑷?| 鈽戯笍 Self-Check before Merge 鈿狅笍 Please check all items below before requesting a reviewing. 鈿狅笍  [x] Doc is updated/provided or not needed [x] Demo is updated/provided or not needed [x] TypeScript definition is updated/provided or not needed [x] Changelog is provided or not needed   <!-- Below are template for copilot to generate CR message. Please DO NOT modify it. -- 馃殌 Summary <!-- copilot:summary --### <samp Improve the appearance and layout of the  component by tweaking its style file. 馃攳 Walkthrough <!-- copilot:walkthrough --### <samp * Fix the vertical alignment of the spin component by setting the font size of the spin container to zero and restoring the font size of the spin text to the base font size (link, link) in",1
Any Mac testers want to verify this at least doesn't make things worse and merge?,0
"I'll target 5.0, sure. This appears similar to #2809, however this PR's promise detection should be more generally applicable (not all Promises follow the A+ standard and implement a  method). This PR also adds tests. So I understand correctly, does rebasing on 5.0 alleviate concerns about breaking any existing uses? Or if it does not, then I'd love to know more about the specifics of those cases to protect against.",0
It should have said  but GitHub mangled it.,-1
"Pushed a commit that should fix the problem. The issue is that Conv3D and its gradient ops do not have BFLOAT16 kernel registered for Eigen CPU backend. So when the graph passes execute, the placer pass (?) throws an error when it sees Conv3D doesn't have a kernel registered in BFLOAT16 type. The placer runs even before AutoBFloat16Converter runs, and that leads to the problem.  Current mitigation is to register NoOp kernel for all of these operators in BFLOAT16 type that are not supported by Eigen CPU backend.",0
sorry. was out of town. will rebase tomorrow morning!,0
"I concur. Also, I don't like the idea of having a path as the key of a map. This feels a bit unnatural to me.",-1
"Thanks for the PR, -orange! This is now merged into  with ab9a310485b43e7a5cd08e0ffba3cb641cb43991 and 69336fb3ec40e1c62ad1700e15fa0d6e03cb57d4. Also, I polished it the new section with 8b7751f5f400d1663b3a8f60885b1837983906ea to update some of the indentation and standardize the explanations to fit the typical writing style of the reference manual.",1
Sweet!,1
"I was having this error for revision 1069273, then bumped to puppeteer 19.6.2, deployed to Google Cloud Function, and the error went away. Then a little later I did another deployment for an unrelated reason, and the error came back again on a new revision 1083080. So it doesn't seem that 19.6.2 fixes the issue.",-1
I've updated as suggested.,0
And in the worst case - we can always revert it :-) Thanks,1
"Thanks again, !",1
"As discussed here, and in continuation of this PR on pydantic-core. We add two new types, implementing constraining datetime values to either enforce or disallow timezone info. The implementation is simple and utilizes the 'aware' and 'naive' constraints from the underlying pydantic-core. Admittedly, I added the  comment just by looking at surrounding code, without looking deeper into how that works. Hopefully it just makes sense here too. (I'm guessing this is some sort of macro that is pre-processed? I'm intrigued!). Oh, and of course this PR depends on a new release of pydantic-core 馃檪",0
"It is generated from the code, the current description is ""Initialize the datasource with available DDL and DML scripts."" I agree that this can be improved and we can do that as part of a separate issue. Type of datasource can be misleading IMO.",-1
is correct here. I'm afraid this will have to wait for a proper strict mode.,0
"SUMMARY The sample value given for the 'mode' parameter is shown without quotes, but the data type is string. If you actually try to use an unquoted numeric string for this value (and don't use leading-0 octal notation...) you're in for a nasty surprise! I added quotation marks to the sample value. ISSUE TYPE  Docs Pull Request  +label: docsite_pr SUMMARY <!--- Describe the change below, including rationale and design decisions -- <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue -- ISSUE TYPE <!--- Pick one below and delete the rest --- Bugfix Pull Request - Docs Pull Request - Feature Pull Request - Test Pull Request COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below -- ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --<!--- A step-by-step reproduction of the problem is helpful if there is no related issue -- <!--- Paste verbatim command output below, e.g. before and after your change --",-1
"Maybe my PR is not accurate and need to be improved. I allow edits from maintainers.  I'm trying to improve docs for users without familiarity with Spring Security. Consider the next use case. ""A very busy developer""鈩?want to set up monitoring with Prometheus for a Spring Boot 2.1 app. They know:  Spring Boot app authorize with form-based auth (because it works in the browser) Prometheus cannot use form-based auth but can use HTTP Basic auth.  They search for more info in Spring Boot docs and finds: What this?!! What HTTP Content-Type header do they need to pass to enable Basic Auth. Current documentation is really confusing! In my case, I drilling into debug session, spend 1 hour and send this PR to help future users of Spring Boot 2.1  endpoint.",-1
"sorry, the pull request was #1546, not 1526.",0
"Sorry, just noticed that #37253 was opened first, so closing in favour of that one",0
"I guess I tend to be pretty conservative about what to call a bug if it is going in a bugfix release. Basically the question is whether it is credible that some user out there is taking advantage of this existing behavior and their code will break after installing a bugfix release. I take that contract very seriously. It seems very unlikely that anyone is using that, but it is tough to prove otherwise. Usually to me for an API change like this to get put into a bug fix, I would say it is OK if the original behavior was so wrong that nobody could be relying on that behavior. Here that is not unambiguously the case, but I agree it is in the grey zone.",0
"<!-- First of all, thank you for your contribution! 馃槃 For requesting to pull a new feature or bugfix, please send it from a feature/bugfix branch based on the  branch. Before submitting your pull request, please make sure the checklist below is confirmed. Your pull requests will be merged after one of the collaborators approve. Thank you! -- [涓枃鐗堟ā鏉?/ Chinese template] 馃 This is a ...  [ ] New feature [ ] Bug fix [ ] Site / documentation update [ ] Demo update [ ] Component style update [ ] TypeScript definition update [ ] Bundle size optimization [ ] Performance optimization [ ] Enhancement feature [ ] Internationalization [x] Refactoring [ ] Code style optimization [ ] Test Case [ ] Branch merge [ ] Other (about what?)  馃敆 Related issue link <!-- 1. Put the related issue or discussion links here. -- 馃挕 Background and solution <!-- 1. Describe the problem and the scenario. 2. GIF or snapshot should be provided if includes UI/interactive modification. 3. How to fix the problem, and list the final API implementation and usage sample if that is a new feature. -- 馃摑 Changelog <!-- Describe changes from the user side, and list all potential break changes or other risks.  | Language   | Changelog | | ---------- | --------- | | 馃嚭馃嚫 English | refactor: CC =| 馃嚚馃嚦 Chinese | refactor: CC = 鈽戯笍 Self-Check before Merge 鈿狅笍 Please check all items below before requesting a reviewing. 鈿狅笍  [x] Doc is updated/provided or not needed [x] Demo is updated/provided or not needed [x] TypeScript definition is updated/provided or not needed [x] Changelog is provided or not needed",0
Thank you for this feedback! That is a really interesting insight. You may be right! We will certainly consider it.,1
"The build after merge failed  because QueueDAO interface has a new method setOffsetTime(), you will have to implement that in your MySQLQueueDAO class.",0
"Thanks for your feedback,  and ! Now all identified issues should be fixed.  TODO: Add support for multicite commands. TODO: Expand integration test.",1
Thanks for the PR but we have a semi-automated process to upgrade dependencies so we don't accept such PRs for that reason.,0
"You can also send your test stream to . It's somewhat hard to tell whether the issue is with the media itself, or with ExoPlayer (and if so, where), without being able to take a look. I'm pretty sure we have some SCTE-35 test streams internally that work correctly with the current implementation.",0
Companion 3.0.0 PR: #7963,0
"What are ""Active headings"" ?",0
Could you write a short personal email so that I have your contact data?,0
gh isn't showing me the line you are trying to mention. Could you please elaborate? Thanks!,0
"Sorry about that, i did not realise that i was pushing over here.",0
"Hi, I forgot about this sometime during having covid. Thanks for reminding me about this. I have a few questions: Assumptions (please correct me if I'm wrong): * A response can either be a native Pydantic model object(), OR a , OR a manual  type. * We have no control over a manual  type. * I'm assuming that  responses will want to be validated and turned into a  before serialised by default. There is cases where the user wants to say ""trust me"" and turn off validation, and we should allow this with a global setting. Questions: * Can we assume that a native  is already validated? (You have to jump through serious loops to build an unvalidated , and if you do that, one can argue that it's your perogative to ensure that things are correct). If so, can we safely skip the validation on 's by default? * Why did you replace the JSON encoder with your own one, instead of using the provided one from Pydantic:  ? It already seems to handle all the common data type conversions correctly? Based on quick tests, it appears to be faster too. Depending on the answer you provide, I can complete this PR. It would be lovely to have a faster response type for the cleaner code by default. Right now returning a  (which is the cleanest in code) will result in the slowest response type. 's are slightly faster, and  is the fastest. I would like making  perform better by default, skip validation and re-building of , so we can just go to serialisation directly? I would like to make the default  use the provided  if available so we can honour custom encoders on it. I would like to make the  allow skipping the datatype conversion by default, as it seems to handle all the common cases as well. BUT, I would like to limit breakage. So what would be safe behaviour be for  and  response types?",0
thank you for making your first contribution to Spring Boot. I've merged your contribution with a polish commit. I've also updated  as discussed in this issue in a separate commit.,1
"There was never any followup from the platform team about this issue, so I think it remains the case that it's not possible to robustly track battery state at the application layer, unfortunately.",-1
See discussion in #3301,0
"This is the branch to reproduce #8674, not an pull request intended for merging. As such closing it to avoid confusion. I believe the branch can still be checkout if the pull request is closed.",0
"Thanks for feedback .  sorry for the delay, comments have been applied.",0
Also enables the object-concise-method transform for --harmony closes #1438 Tested with  (with this on clipboard):,0
": Sorry, I don't have too much justification for the errors changes, I adapted kvaster's patch from #676 and fixed the tests.  I'm not entirely sure what that fix does.",0
Was the bridge package created?,0
"Thanks for the example! I'd prefer to keep the existing example as-is, mostly because I want the example to be as simple as possible (to use as a starting point). This would make a good example for the wiki. Though, I'd prefer if you implemented a center constraint (脿 la Polymaps) rather than the stricter visible-area constraint. If you zoom all the way out in your implementation, and then zoom in on a point in Antarctica (for example), then you get temporarily weird zooming due some zoom levels being constrained, but other zoom levels not being constrained. The center constraint has the nice property that it the map's currently-visible center is valid at any zoom level, so it never swims while zooming. If you want to reopen this with a new example file, say, mercator-zoom-constrained.html, and implement the center constraint鈥?then I would be happy to pull this in!",1
"Thanks for your contribution. I'm trying to verify these changes locally by running , and have been running into issues launching the UI from local. Here's my error stack trace: Also, here's my gulp details after running : Let me know if I'm missing something.",0
it's been a while since this PR was opened and I'd like to understand how relevant it is. Can you please update us with the current sate of affair?,0
Hi there! Thank you for your advice. I close my pull request.,1
FYI,0
This is a comment that describes the purpose of a class.   [ ] Change in CHANGELOG.md described [ ] Tests created for changes [ ] Manually tested changed features in running JabRef [ ] Screenshots added in PR description (for bigger UI changes) [ ] Ensured that the git commit message is a good one [ ] Check documentation status (Issue created for outdated help page at help.jabref.org?),0
"I think we're currently stuck with it not really being possible to robustly track battery state at the application layer. I have an internal bug open about that, but no progress so far [Internal ref: b/156962128].",-1
I'm thinking what about a followup PR that has that checklist at the top of the reviewers guidelines? Also thanks for all your help!,1
Just a friendly bump because I want to know if anyone has seen this PR.,0
"We should also check that all our locators actually adhere to this before documenting it! I've been having a play around with  to test this, and have found that for  with , the smallest tick returned is  which is not ...",0
"Thanks  for this patch :+1:  We are working on Pydantic V2 and the plan is to don't accept the new features on . So, I think you need to wait for V2. what do you think Sorry for that!",1
it looks like the tests fail? Did I do something wrong here?,-1
Please review,0
"Awesome, it looks good. However, I just noticed you were trying to merge this into 1.12; We're actively working on 2.0 right now, and this should go to  branch. Would you mind changing it to  branch please. Let me know if you need any help in doing that.",1
"<!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update ""[ ]"" to ""[x]"" to check a box) -- What kind of change does this PR introduce? (check at least one)  [ ] Bugfix [ ] Feature [ ] Code style update [x] Refactor [ ] Build-related changes [ ] Other, please describe:  Does this PR introduce a breaking change? (check one)  [ ] Yes [x] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [x] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. , where ""xxx"" is the issue number) [ ] All tests are passing:  [ ] New/updated tests are included  If adding a new feature, the PR's description includes: - [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",0
Thanks! I'll work on getting this merged.,1
Apparently they have a test for this exact thing.,0
LGTM! :+1:,1
"Sigh. I have a working implementation, but I'm unhappy with the large code burden it adds.",-1
Kinda forgot about this. I'll try making the requested fixes asap and resubmit for review.,0
I'm very sorry. Should be fixed by now,-1
"Hello, This bug fixes #2666, a html file reproducing the bug within it's context can be found here  Since it's only one line I don't think a test is required but I'll explain why the bug occurs and why the PR fixes this. As stated here, the compilation is cached so for all components except the first one the attributes are not removed. Users might want to use the ':is' version. In this case it's not removed from the DOM and visible. This PR fixes the bug in my codebase. Thank you !",1
lgtm,1
"This relies on a globally-installed copy of Vows, rather than using the version of Vows that is required by D3. This is undesirable because it means the user will have to install Vows manually (as ) rather than the standard method using package.json (). Also, this approach won't work if the user鈥檚 globally-installed version of Vows is different from the one D3 depends on. I'm not familiar with Cygwin, but I'm afraid you'll need to solve this error a different way.",-1
:+1: :cake:,1
Looks good to me. Thanks.,1
"Actually I did not. Now I did. The facts make sense in my particular context. Thanks for pointing me to that discussion! I actually tried to migrate some code from an HystrixCommand to an asynchronous callback like code. Therefore, as mentioned, the observable is already matched on a pool.",1
"Sorry, the previous set of commits were a WIP and I ran out of steam before getting d3.xml and d3.text working. Should have left a message about that. On the other hand your comments were very helpful for coming up with an approach. All unit tests are passing now and I think the method overloading should be working properly as well.",1
See #5208,0
I am not fixing the streaming tests as streaming support is already being phased out and will eventually be unsupported iirc. The stream fails occur often anyways because of server errors. Note that this PR  will hopefully fix the intermittent server errors that are one reason streaming tests fail sometimes. does this sound correct to you?,0
"There is no formalized design for it. However, currently the compiler will preserve two types of comments: detached, pinned (the triple-slash is a bug). I think it is desirable to keep copy right comment even in emitted js. I make an issue #3878 for discussing design for removing comment in general.",0
"Thanks . Looks like there is a bug here (either in my test or in the code.) The issue is that  returns a time in localtime which I wasn't accounting for in my test. There are 2 ways to solve this problem: 1. Modify  to subtract  so that the resulting value represents UTC time. This will result in the value of  being the same on all systems regardless of timezone. 2. Modify  to subtract  so that the test always passes. The former solution seems correct to me, and I can't find anything in the code or RFCs to contradict this. Unfortunately this change would definitely impact users of this module so I'd like to hear others opinions on this. Thanks!",0
"Strange, <T",-1
TEST,0
"Thanks, , for the PR! This is now merged into  via 51b9b2f693ec48127f2cc8554aa3edbc58fccc92. Note that I polished the commit message just a bit, though it will still show you as the contributor. I added a small polish via 653400edfabf52760bdda3c30c8b51283b256b15.",1
", thanks for your patience. I put together a pretty simple test to measure performance differences with this code change. I tested just the method  with 100,000,000 iterations, and ran the test a number of times before and after the code change. The request that was saved included 4 headers, 4 cookies, 4 preferred locales and 4 parameters, causing the constructor to do some work on each iteration. There were no discernible differences with the default configuration for . However, with : Before code change:  Average ~1,464 nanoseconds per   After code change:  Average ~114 nanoseconds per   So we save about 1.35 microseconds per request. This is pretty small, but proves that the performance impact is non-negligible. It's worth noting that most applications would use the  in the stateless scenario ( or even ), so I'm not sure many applications will benefit from this. Still, this is another way to configure the application to avoid session creation when desired and may improve performance in that case.",0
"Sorry about that! Yes, I think we should keep this PR for the remaining changes.",1
"All right, I am closing this PR for now. Thanks for the investigation nonetheless! Now when we have similar feature requests, we can point to this discussion and explain why we are not going to adopt such a feature for the time being :smile:",1
These changes look good to me.,1
I have finished adding Unit tests and Javadoc. The only thing I noticed/changed is how the HystrixPlugin is loaded as a singleton eagerly. I prefer lazy loading so you don't accidentally kick off loading by just importing . There is a slight chance this could affect backward compatibility and or performance (but this is very dubious). This may have been even done on purpose. Perhaps  would know? Let me know if and when you want me to squash the commits.,0
No problem! Do I need to fix something so that it auto-merges? The tests seem like they flaked out...,0
"is confusingly named and never used.  This PR gets rid of it. The deprecated numpy API that causes zillions of warnings includes , so this replaces the old usage with the encouraged usage. A bunch of  isn't actually used in tslibs.util, so the relevant functions are moved up to . Docstrings for most of what's left in tslibs.util. Simplify util._checknull by removing an unnecessary try/except.",-1
"replaces #1497, originally intended to fix the issue you already fixed in b57cdf2",0
"Please check if the PR fulfills these requirements - [x] The commit message follows our guidelines:  - [x] Tests for the changes have been added (for bug fixes / features) - [ ] Docs have been added / updated (for bug fixes / features) What kind of change does this PR introduce? (check one with ""x"") What is the current behavior? (You can also link to an open issue here) 9613 What is the new behavior? On the first received value from an observable, decide to continue or cancel (de)activation. Waiting for completion is not required. Does this PR introduce a breaking change? (check one with ""x"") If this PR contains a breaking change, please describe the impact and migration path for existing applications: ... Other information: I believe this isn't a breaking change, even though the behavior is changed (accepting more than one value in the stream), because this wasn't properly documented. Also, I think is much more convenient to not require the observable to complete.",0
"I don't know that  would really apply here though because there are more complex expressions with  blocks, etc.",0
"FYI, there appears to be a suitable test stream in , which also crashes (native crash in the MP3 decoder) using this patch. I suspect the codec configuration data is being parsed incorrectly from the stream, although I didn't check.",0
I think you might need to rebase onto master and repush (--force) because there are conflicts with the message codes stuff now. Sorry.,0
close #4787,0
"<!-- Thank you for submitting a pull request! Please verify that: * [ ] There is an associated issue in the  milestone (required) * [ ] Code is up-to-date with the  branch * [ ] You've successfully run  locally * [ ] There are new or updated unit tests validating the change Refer to CONTRIBUTING.MD for more details. ** Please don't send typo fixes! ** Please don't send a PR solely for the purpose of fixing a typo, unless that typo truly hurts understanding of the text. Each PR represents work for the maintainers, and that work should provide commensurate value. If you're interested in sending a PR, the issue tracker has many issues marked . Fixes #53290. I think The original fix for #52543 isn't in the correct order. In TypeScript 5.0 it became  instead of ;",0
Closing in favor of #14793,0
I consent.,0
"Unfortunately, I think it is. Trivial changes are really just one-liners, typo corrections, etc",-1
Thanks.  The .gif file is still not getting installed.  You need to add a line for  to the  list in .,0
"did you get a chance to follow up on the issue? If not, I can take a look in the next 24hrs.",0
"Hi  Thanks. Sorry my bad this was my first commit in code previously in docs, was on it but you were too quick. Noted henceforth will make sure to do the build. Thanks once again for the opportunity.",1
I think that another valid argument is that  just must create different  and delegate the configuration on each of used tools (e.g.  or  ).,0
"Unfortunately, you will no longer be notified if the tokens expire. Sorry for the delay. BTW: It was not possible to renew the WebXR Gamepad Support token. Seems this trial is over.",-1
I did try to restore the anchors with two values (using this SO answer but that didn't really work as expected. Given the link is broken for quite some time anyway I went ahead and remove the outdated duplicate. Thanks for the PR!,0
"Sorry for the delay, I spent a lot of time in  and finally all of the errors and requirements has fulfilled,   , Please feel free to review.",1
"Yes but the problem is that you're not providing a path in your configuration, you are providing a placeholder that's going to be replaced with the database that you are using. If you are using two databases and one of them does not need specific scripts, the startup will fail because the directory does not exist. It means that the use case of this feature is quite narrowed IMO: all the databases that you support must require database specific scripts. Does that make sense?",0
"Thanks, ! This has been merged into  in a5351f3d890b888857bb60171a9846c331a6aabe. I standardized the commit format and then also merge it into .",0
"it'd be awesome if it's possible to have the best of both worlds :-). I tried with conda envs and specific versions of Python, and this branch: py3.6, tab completion works well with , but with py3.8, it does not work. Is it a linux thing then? To be continued...",1
please review,0
"I believe the bug in the CI was not caused by changes in this PR. This PR fixed a simple but real bug. I managed to fix it in another way for my client, so I only did this PR if it can improve pandas, especially in those edges cases that can be really annoying.  I added a test, a whatsnew entry and answered your comments.  Could you please manage to merge it ?  Otherwise keep it close, it's too much an investment for such a minor improvment.",0
"PR Summary Adds the Gadfly plot theme that I wrote a blog post about a couple of years ago PR Checklist <!-- Please mark any checkboxes that do not apply to this PR as [N/A]. -- - [ ] Has pytest style unit tests (and  passes). N/A - [ ] Is Flake 8 compliant (run  on changed files to check). N/A - [ ] New features are documented, with examples if plot related. N/A - [ ] Documentation is sphinx and numpydoc compliant (the docs should [build] () without error). N/A - [ ] Conforms to Matplotlib style conventions (install  and run ). N/A - [x] New features have an entry in  (follow instructions in README.rst there). - [ ] API changes documented in  (follow instructions in README.rst there). N/A <!-- Thank you so much for your PR!  To help us review your contribution, please consider the following points:   A development guide is available at .   Help with git and github is available at   .   Do not create the PR out of master, but out of a separate branch.   The PR title should summarize the changes, for example ""Raise ValueError on   non-numeric input to set_xlim"".  Avoid non-descriptive titles such as   ""Addresses issue #8576"".   The summary should provide at least 1-2 sentences describing the pull request   in detail (Why is this change required?  What problem does it solve?) and   link to any relevant issues.   If you are contributing fixes to docstrings, please pay attention to   .  In particular,   note the difference between using single backquotes, double backquotes, and   asterisks in the markup.   We understand that PRs can sometimes be overwhelming, especially as the reviews start coming in.  Please let us know if the reviews are unclear or the recommended next step seems overly demanding, if you would like help in addressing a reviewer's comments, or if you have been waiting too long to hear back on your PR. --",0
"Not necessarily, it might be an event with different state : success or failure. Yes it's not out of question (my suggestion on the factory methods indeed lean in that direction). But at this moment, I fear we are over-engineering this.  and  are the primary users of this, could you show us some concrete code snippets outside (not tests) how you want the listener to be registered or how the code you're working with can/should process the verifications. Basically the design question is wether we want this : Or",0
462,0
There is an experimental module in JUnit5 that we haven't added at all in our dependency management so if we want to be consistent we should either reject this or add the one of Junit5,0
I was wrong in my previous comment. Sorry for bothering you.,-1
Cancel my last. Fixed by changing to,0
Backport PR #14057: Improve Gradient bar example,0
"That doesn't seem to be the case? With this branch, and the example of the whatsnew docs: Further a general comment (will try to do more detailed review later this week): I am not sure we can just change this. First, it is a API breaking change in several places, eg also pivot_table*. And second, I think the current behaviour can actually useful in certain cases and it would be nice to have a way to keep this behaviour.  I know this is very ugly, but it would be worth to have a keyword for this in  ? * but I agree we should look into it and try to make this more consistent. As, for example,  does not seem to include unobserved categories (already currently on master), while  does include them but apparently only for the index and not columns? (try  with the example of whatsnew). On the other hand,  does include them (and I think rightly so), but that also introduces an inconsistency with groupby.",0
"Source files that contain directives or components that need an inline type constructor or inline template type-check block would always be considered as affected in incremental rebuilds. The inline operations cause the source file to be updated in the TypeScript program that is created for template type-checking, which becomes the reuse program in a subsequent incremental rebuild. In an incremental rebuild, the source files from the new user program are compared to those from the reuse program. The updated source files are not the same as the original source file from the user program, so the incremental engine would mark the file which needed inline operations as affected. This prevents incremental reuse for these files, causing sub-optimal rebuild performance. This commit attaches the original source file for source files that have been updated with inline operations, such that the incremental engine is able to compare source files using the original source file. Fixes #42543",0
Unfortunately HTTPS cannot be activated on Github when there's a CNAME,-1
I've upgrade to a version of the plugin that is compatible with Java 11. This PR is now ready.,0
"From a positioning PoV, a twinned axes is just like an inset axes whose position exactly matches the parent's position.  Doing so removes the need for the heuristic in / where a non-gridspec-managed Axes would track the position of any Axes with which it shared either xaxis or yaxis, which was a proxy for twinning (per 721b949).  This would cause incorrect behavior in rare cases such as where the  call would make the second axes go on top of the first. PR Summary PR Checklist <!-- Please mark any checkboxes that do not apply to this PR as [N/A]. -- - [ ] Has pytest style unit tests (and  passes). - [ ] Is Flake 8 compliant (run  on changed files to check). - [ ] New features are documented, with examples if plot related. - [ ] Documentation is sphinx and numpydoc compliant (the docs should build without error). - [ ] Conforms to Matplotlib style conventions (install  and  and run ). - [ ] New features have an entry in  (follow instructions in README.rst there). - [ ] API changes documented in  (follow instructions in README.rst there). <!-- Thank you so much for your PR!  To help us review your contribution, please consider the following points:   A development guide is available at .   Help with git and github is available at   .   Do not create the PR out of master, but out of a separate branch.   The PR title should summarize the changes, for example ""Raise ValueError on   non-numeric input to set_xlim"".  Avoid non-descriptive titles such as   ""Addresses issue #8576"".   The summary should provide at least 1-2 sentences describing the pull request   in detail (Why is this change required?  What problem does it solve?) and   link to any relevant issues.   If you are contributing fixes to docstrings, please pay attention to   .  In particular,   note the difference between using single backquotes, double backquotes, and   asterisks in the markup.   We understand that PRs can sometimes be overwhelming, especially as the reviews start coming in.  Please let us know if the reviews are unclear or the recommended next step seems overly demanding, if you would like help in addressing a reviewer's comments, or if you have been waiting too long to hear back on your PR. --",0
"Adding a line to the settings.gradle will get it compile into the build, but we still need to program the app to use okhttp instead default one. There is no magic (like reflection) to pick up the okhttp.",0
"Sorry it if it seemed hostile, it wasn't meant as such. Just that I'm dyslexic and long responses take me a long time to parse, as you can see from the volume of issues on pydantic, avoiding such time sinks is helpful. I actually skim-read your message above, but missed the part about duplication. That's my fault, but also kind of an example of what I was saying. I'll look into this more soon and let you know what I think.",0
Mostly for my sanity. It's hard to keep track of what is enabled where if it's not enforced.,-1
Thank you! :smile:,1
"Fixed typos I saw in the Request Context documentation. <!-- Commit checklist:  add tests that fail without the patch ensure all tests pass with pytest add documentation to the relevant docstrings or pages add versionadded or versionchanged directives to relevant docstrings add a changelog entry if this patch changes code  Tests, coverage, and docs will be run automatically when you submit the pull request, but running them yourself can save time. --",0
"Could you please check this commit for the mutable schema interface? It builds the host-side flatc using cmake ExternalProject_Add(). Then, we could use the flatc to generate the mutable schema interface.",0
"🤦‍♂️ Thank you, !",-1
"Sorry for my delay, I was on Holidays :-) Your question is very interesting; I discussed this issue with . We think there is a performance problem even in the original CAS client; the behavior is exactly the same. We should probably change the gatewayResolver to try a gateway authentication every xx minutes. I will discuss the question on the CAS mailing list and come back with answers. Any suggestions from you are welcome.",0
"Since, the same test failed twice, which does not happen in other pull requests. I suspect that there is a change in this PR that is causing the failure.  can you verify?",0
"-c I would really like to have it in 2.2. reworking the PR now. The thing is, our use case (however ""not-ansibly"") involves running potentially dozens of ansible-playbook processes each against a single node, but from the server-side component w/o human interaction. Unfortunately this one-node-per-playbook restriction is imposed by the outer framework we are using Ansible under. That is why being able to save even couple of CPU% is important for me.",0
I'd quite like to go the other way and add some additional CSS styles. I think the HTML snippets are quite useful for people.,1
"Hmm, did something go wrong with",0
Thanks a lot ! I am not sure we'll have time to review this one for 2.0 still. I am flagging it now to get more feedback.,0
Thank you for the PR. Actually  takes precedence over so I've added a separate entry to make that more explicit.,0
"Okay, after some fixes, there are no remaining issues with my app. This is mergable AFAIK :smile:",1
"Thanks for your reply . This PR was submitted based on Andy's comment. It's essentially a variant of  , simplifying some logic and accounting for attribute overriding. I didn't modify the code in  and this unit test passed.",0
"Do you understand exactly what the specification means by ""successive frames""? Video frames are quite often re-ordered during decode, and it's unclear whether successive is defined before or after this re-ordering occurs.",0
"Fixes #4703. <!-- describe the changes you have made here: what, why, ...       Link issues by using the following pattern: #333 or koppor#49.      The title of the PR must not reference an issue, because GitHub does not support autolinking there. --   [ ] Change in CHANGELOG.md described [ ] Tests created for changes [ ] Manually tested changed features in running JabRef [ ] Screenshots added in PR description (for bigger UI changes) [ ] Ensured that the git commit message is a good one [ ] Check documentation status (Issue created for outdated help page at help.jabref.org?)",0
Released. Closing this pull request.,0
The get_db dependency causes a weird  `TypeError: <async_generator object get_db at 0x7ff6d9d9aa60issue on my project. Here's my code: db.py session.py,-1
Would you please check if this looks good whenever you have some time for this?,0
Please let me know if  is supposed to be an optional field. I can do that as well. I wasn't able to figure it out from the docs. The schema on API docs page doesn't mention logs.,0
"-procon  is not going to help, the timeout offered by the provider is related to message consumption (which is certainly not something you want to do as part  of a health check). As for what Phil said, it's related to backporting the change to , there is no lambda there.",0
Congrats! E-mail me with how you'd like to be paid.,1
"I think your Amazon address is part of that group, but you're using a Lab126 address that isn't. You need to get the Lab126 address added to the group, or use your Amazon address on GitHub. The bot does verify corp CLA signers, so you should be able to reply  once this is resolved.",0
